# .env.example
# Copy and save as an .env file with own environment variables

###  Watcher Application Configuration

# Port for health check service
HEALTH_CHECK_PORT=3000  # The port the health check service listens on

# Interval for logging health checks in milliseconds (1 hour = 3600000 ms)
HEALTH_CHECK_LOG_INTERVAL=3600000  # Logs health check status every hour

# Interval for performing health checks in milliseconds (5 minutes = 300000 ms)
HEALTH_CHECK_INTERVAL=300000  # Runs a health check every 5 minutes

IDLE_TIMEOUT=30 # How long before closing a socket cnnection (30 Seconds)

# Cron schedule for tasks (runs every 10 minutes)
# Format: 'minute hour day month day-of-week'
CRON_SCHEDULE='*/5 * * * *'  # Executes a task every 5 minutes

# Logging configuration
LOG_LEVEL='info'  # Set the logging level (e.g., debug, info, warn, error)
LOG_MAX_SIZE='20m'  # Maximum log file size before rotation (e.g., 20m for 20 megabytes)
LOG_MAX_FILES='14d'  # Maximum age of log files before deletion (e.g., 14d for 14 days)

### Eventing Configuration

# Couchbase host URL
COUCHBASE_HOST='http://localhost:8096'  # The host address of the Couchbase instance

# Couchbase credentials
COUCHBASE_USERNAME='demoUser'  # Username for Couchbase
COUCHBASE_PASSWORD='demoPassword'  # Password for Couchbase

# Interval for checking service status in milliseconds (5 minutes = 300000 ms)
SERVICE_CHECK_INTERVAL=300000  # Checks the Couchbase service status every 5 minutes

# Threshold for Data Change Protocol (DCP) backlog
DCP_BACKLOG_THRESHOLD=1000  # Maximum number of DCP items before action is taken

### OpenTelemetry Configuration

# Service details for tracing and monitoring
SERVICE_NAME='Couchbase Eventing Service Watcher'  # Name of the service for identification in traces, metrics & logs
SERVICE_VERSION='1.0.0'  # The current version of the service
DEPLOYMENT_ENVIRONMENT='development'  # Deployment environment (e.g., development, staging, production)

# Endpoints for OpenTelemetry collectors
# To disable Opentelemetry, comment out the "preload" in the bunfig.toml configuration file
TRACES_ENDPOINT='http://192.168.0.9:4318/v1/traces'  # Endpoint for sending trace data
METRICS_ENDPOINT='http://192.168.0.9:4318/v1/metrics'  # Endpoint for sending metrics data
LOGS_ENDPOINT='http://192.168.0.9:4318/v1/logs'  # Endpoint for sending log data

# Interval for reading metrics in milliseconds
METRIC_READER_INTERVAL=1800000  # Collects metrics every 30 minutes (30 minutes = 1800000 ms)
CONSOLE_METRIC_READER_INTERVAL=600000  # Outputs metrics to console every 10 minutes (10 minutes = 600000 ms)

### Messaging Configuration

# Alerting and Webhooks for Messaging
ALERT_TYPE="1" # 0 = No Alerts, 1 = Slack, 2 = Microsoft Teams

# Slack webhook URL for notifications
SLACK_WEBHOOK_URL='https://hooks.slack.com/services/[id1]/[id2]/[token]'  # Webhook URL for sending messages to Slack

# Teams webhook URL for notifications
TEAMS_WEBHOOK_URL='https://[domain].webhook.office.com/webhookb2/[uuid1]@[uuid2]/IncomingWebhook/[uuid3]/[uuid4]'  # Webhook URL for sending messages to Microsoft Teams
